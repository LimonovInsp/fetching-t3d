{"version":3,"sources":["api.ts","components/MaterialsList/MaterialsList.tsx","components/MaterialsButtons/MaterialsButtons.tsx","App.tsx","index.tsx"],"names":["fetchData","a","fetch","response","json","MaterialsList","materials","className","map","material","key","_id","alt","description","src","icon","name","replace","split","word","toUpperCase","join","MaterialsButtons","props","handleButtonLoad","handleButtonShow","handleButtonClear","isLoaded","opacityRange","opacity","onClick","disabled","style","App","useState","setMaterials","setIsLoaded","then","materialsList","length","ReactDOM","render","document","getElementById"],"mappings":"mRAEaA,EAAS,uCAAG,4BAAAC,EAAA,sEACAC,MAHT,wCAES,cACjBC,EADiB,yBAGhBA,EAASC,QAHO,2CAAH,qDCMTC,G,MAAiC,SAAC,GAAD,IAAGC,EAAH,EAAGA,UAAH,OAC5C,wBAAIC,UAAU,aACXD,EAAUE,KAAI,SAAAC,GAAQ,OACrB,wBAAIF,UAAU,YAAYG,IAAKD,EAASE,KACtC,yBACEJ,UAAU,aACVK,IAAKH,EAASI,YACdC,IAAK,wBAA0BL,EAASM,OAE1C,wBACER,UAAU,iBAETE,EAASO,KACTC,QAAQ,KAAM,KACdC,MAAM,KACNV,KAAI,SAAAW,GAAI,OAAIA,EACZF,QAAQE,EAAK,GAAIA,EAAK,GACtBC,kBACAC,KAAK,MAER,uBAAGd,UAAU,kBACVE,EAASI,YAAYI,QAAQ,KAAM,aCnBjCK,G,MAA2C,SAACC,GAAW,IAC1DC,EAAoED,EAApEC,iBAAkBC,EAAkDF,EAAlDE,iBAAkBC,EAAgCH,EAAhCG,kBAAmBC,EAAaJ,EAAbI,SACzDC,EAAeD,EACjB,CAAEE,QAAS,IACX,CAAEA,QAAS,GAEf,OACE,yBAAKtB,UAAU,gBACf,4BACEA,UAAU,cACVuB,QAASN,EACTO,UAAuB,IAAbJ,EACVK,MAAOJ,GAJT,QAQA,4BACErB,UAAU,cACVuB,QAASL,GAFX,QAMA,4BACElB,UAAU,cACVuB,QAASJ,GAFX,YCMWO,G,MA/BO,WAAO,IAAD,EACQC,mBAAqB,IAD7B,mBACnB5B,EADmB,KACR6B,EADQ,OAEMD,oBAAS,GAFf,mBAEnBP,EAFmB,KAETS,EAFS,KAIpBZ,EAAgB,uCAAG,sBAAAvB,EAAA,sEACjBD,IAAYqC,MAAK,gBAAGC,EAAH,EAAGA,cAAH,OAAuBH,EAAaG,MADpC,2CAAH,qDAYtB,OACE,yBAAK/B,UAAU,OACb,kBAAC,EAAD,CACEiB,iBAAkBA,EAClBC,iBAZmB,WACpBnB,EAAUiC,QACXH,GAAY,IAWVV,kBAPoB,kBAAMS,EAAa,KAQvCR,SAAUA,IAEXA,EACC,kBAAC,EAAD,CAAerB,UAAWA,IAC1B,MC7BRkC,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,W","file":"static/js/main.2d41c614.chunk.js","sourcesContent":["const API_URL = \"https://api.t3d.live/materials/lists\";\n\nexport const fetchData = async () => {\n  const response = await fetch(API_URL);\n\n  return response.json();\n}\n","import React from 'react';\nimport { Material } from '../../interfaces';\nimport \"./MaterialsList.css\";\n\ninterface Props {\n  materials: Material[];\n}\n\nexport const MaterialsList: React.FC<Props> = ({ materials }) => (\n  <ul className=\"App__list\">\n    {materials.map(material => (\n      <li className=\"App__item\" key={material._id}>\n        <img\n          className=\"App__image\"\n          alt={material.description}\n          src={'https://api.t3d.live/' + material.icon}\n        />\n        <h3\n          className=\"App__headline\"\n        >\n          {material.name\n          .replace(/_/g, ' ')\n          .split(' ')\n          .map(word => word\n          .replace(word[0], word[0]\n          .toUpperCase()))\n          .join(' ')}\n        </h3>\n        <p className=\"App__paragraph\">\n          {material.description.replace(/_/g, ' ')}\n        </p>\n      </li>\n    ))}\n  </ul>\n);\n","import React from 'react';\nimport \"./MaterialsButtons.css\";\n\ninterface ButtonsProps {\n  handleButtonLoad: () => void;\n  handleButtonShow: () => void;\n  handleButtonClear: () => void;\n  isLoaded: Boolean;\n}\n\nexport const MaterialsButtons: React.FC<ButtonsProps> = (props) => {\n  const { handleButtonLoad, handleButtonShow, handleButtonClear, isLoaded } = props;\n  const opacityRange = isLoaded \n    ? { opacity: 0.5 } \n    : { opacity: 1 };\n\n  return (\n    <div className=\"App__buttons\">\n    <button\n      className=\"App__button\"\n      onClick={handleButtonLoad}\n      disabled={isLoaded === true}\n      style={opacityRange}\n    >\n      Load\n    </button>\n    <button\n      className=\"App__button\"\n      onClick={handleButtonShow}\n    >\n      Show\n    </button>\n    <button\n      className=\"App__button\"\n      onClick={handleButtonClear}\n    >\n      Clear\n    </button>\n  </div>\n  );\n};\n","import React, {useState} from 'react';\nimport { fetchData } from './api';\nimport { Material } from './interfaces';\nimport { MaterialsList } from './components/MaterialsList/MaterialsList';\nimport { MaterialsButtons } from './components/MaterialsButtons/MaterialsButtons';\nimport \"./App.css\";\n\nconst App: React.FC = () => {\n  const [materials, setMaterials] = useState<Material[]>([]);\n  const [isLoaded, setIsLoaded] = useState(false);\n\n  const handleButtonLoad = async () => {\n    await fetchData().then(({ materialsList }) => setMaterials(materialsList));\n  };\n\n  const handleButtonShow = () => {\n    if(materials.length) {\n      setIsLoaded(true);\n    }\n  }\n\n  const handleButtonClear = () => setMaterials([]);\n\n  return (\n    <div className=\"App\">\n      <MaterialsButtons\n        handleButtonLoad={handleButtonLoad}\n        handleButtonShow={handleButtonShow}\n        handleButtonClear={handleButtonClear}\n        isLoaded={isLoaded}\n      />\n      {isLoaded\n      ? <MaterialsList materials={materials} /> \n      : ''}\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}